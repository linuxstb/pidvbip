#!/bin/bash
#
# pidvbip configure script
#
# Copyright (c) 2013 Adam Sutton <dev@adamsutton.me.uk>
#

# ###########################################################################
# Setup
# ###########################################################################

#
# Defaults
#

ROOTDIR=$(cd "$(dirname "$0")"; pwd)
CC=${CC:-gcc}
CFLAGS="$CFLAGS -pipe -Wall -I."
LDFLAGS="-lm -lpthread"
VC_SDK_PATH="${VC_SDK_PATH-/opt/vc}"

#
# Options
#

OPTIONS=(
  "libcec:auto"
  "libavformat:auto"
  "avahi:auto"
  "debug:no"
)

#
# Begin
#

. "$ROOTDIR/support/configure.inc"
parse_args $*
# TODO: add --vc-sdk-path into command line flags

# ###########################################################################
# Checks
# ###########################################################################

echo "Checking support/features"

#
# Compiler
#
check_cc\
  || die 'Failed to locate C compiler'
check_cc_header pthread\
  || die 'Failed to locate pthreads'

#
# Raspberry PI checks
#
CFLAGS="$CFLAGS -I$VC_SDK_PATH/include"
CFLAGS="$CFLAGS -I$VC_SDK_PATH/include/interface/vcos/pthreads"
CFLAGS="$CFLAGS -I$VC_SDK_PATH/include/interface/vmcs_host/linux"
LDFLAGS="$LDFLAGS -L$VC_SDK_PATH/lib -lbcm_host -lvcos -lvchiq_arm"

check_cc_snippet "fpu" "" "-mfloat-abi=hard -mfpu=vfp" && \
  CFLAGS="$CFLAGS -mfloat-abi=hard -mfpu=vfp"

CFLAGS="$CFLAGS -DUSE_VCHIQ_ARM"
check_cc_snippet "bcm_host" '#include <bcm_host.h>;
void t(){bcm_host_init();}' ||\
  die "Failed to locate bcm_host"

check_cc_snippet "vcos" '#include <interface/vcos/vcos.h>; 
void t(){vcos_malloc_aligned(0,0,0);}' ||\
  die "Failed to locate vcos"

LDFLAGS="$LDFLAGS -lEGL -lGLESv2"
check_cc_snippet "gles" '#include <EGL/egl.h>;
void t(){eglCreateContext(0,0,0,0);}' ||\
  die "Failed to locate GLES"

CFLAGS="$CFLAGS -DOMX_SKIP64BIT"
LDFLAGS="$LDFLAGS -lopenmaxil"
check_cc_snippet "openmax" 'void t(){OMX_Init();}' ||\
  die "Failed to locate OpenMAX"

#
# FreeType
#

if ! check_pkg freetype2; then
  die "Failed to locate FreeType"
fi

#
# LibCEC
#

if enabled_or_auto libcec; then
  if check_pkg libcec; then
    enable libcec
  elif check_cc_snippet "libcec" '#include <libcec/cec.h>
void t(){cec_initialise(0);}' "-lcec"; then
    LDFLAGS="$LDFLAGS -lcec"
    enable libcec
  elif enabled libcec; then
    die "Failed to locate libcec"
  fi
fi

#
# LibavFormat
#

if enabled_or_auto libavformat; then
  if check_pkg libavformat; then
    enable libavformat
  elif enabled libavformat; then
    die "Failed to locate libavformat"
  fi
fi

#
# Avahi
#
if enabled_or_auto avahi; then
  if check_pkg avahi-client; then
    enable avahi
  elif check_cc_snippet "avahi" '#include <avahi-client/client.h>
void t(){avahi_client_new(0,0,0,0,0);' "-lavahi-client -lavahi-common"; then
    LDFLAGS="$LDFLAGS -lavahi-client -lavahi-common"
    enable avahi
  elif enabled avahi; then
    die "Failed to locate avahi"
  fi
fi

#
# Libmpg123
#

if check_pkg libmpg123; then
  enable libmpg123
elif check_cc_snippet "libmpg123" '#include <mpg123.h>
void t(){mpg123_init();}' "-lmpg123"; then
  LDFLAGS="$LDFLAGS -lmpg123"
  enable libmpg123
else
  die "Failed to locate libmpg123"
fi

#
# NeAAC
#

LDFLAGS="$LDFLAGS -lfaad"
check_cc_snippet "faad" '#include <neaacdec.h>
void t(){NeAACDecOpen();}' ||\
  die "Failed to locate faad"

#
# A52
#
LDFLAGS="$LDFLAGS -la52"
check_cc_snippet "a52" '#include <stdint.h>
#include <a52dec/a52.h>
void t(){a52_init(0);}' ||\
  die "Failed to locate a52dec"

#
# Debug
#
if enabled debug; then
  CFLAGS="$CFLAGS -O0 -g3"
else
  CFLAGS="$CFLAGS -O3 -DNDEBUG"
fi

# ###########################################################################
# Write config
# ###########################################################################

# Write config
write_config

# Output config
print_config
echo "Final Binary:"
echo "  $BUILDDIR/pidvbip"
echo ""
